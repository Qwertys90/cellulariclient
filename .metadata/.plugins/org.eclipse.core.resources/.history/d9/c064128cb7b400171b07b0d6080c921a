package it.dstech.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import it.dstech.models.Cellulare;
import it.dstech.models.User;
import it.dstech.services.CellulareService;
import it.dstech.services.UserService;


@RestController
@RequestMapping("/cellulare")
public class CellulareController {
	
	@Autowired
	private CellulareService cellulareService;
	
	@Autowired
	private UserService userService;
	
	private final Logger logger = LoggerFactory.getLogger(this.getClass());

	@GetMapping("/getmodel")
	public ResponseEntity<Cellulare> getmodel() {
		Cellulare prodott = new Cellulare();
		return new ResponseEntity<Cellulare>(prodott, HttpStatus.CREATED);
	}

	
	@PostMapping("/saveupdate")
	public ResponseEntity<Cellulare> saveOrUpdateCellulare(@RequestBody Cellulare cellulare) {
		try {
			Cellulare saved = cellulareService.saveOrUpdateCellulare(cellulare);
			logger.info(saved + " saved");
			return new ResponseEntity<Cellulare>(saved, HttpStatus.CREATED);
		} catch (Exception e) {
			logger.error("Errore " + e);
			return new ResponseEntity<Cellulare>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
	@RequestMapping("/delete/{id}")
	public ResponseEntity<Cellulare> deleteCellulare(@PathVariable("id") int id) {
		try {
			cellulareService.deleteCellulare(id);
			logger.info(id + " deleted");
			return new ResponseEntity<Cellulare>(HttpStatus.OK);
		} catch (Exception e) {
			logger.error("Errore " + e);
			return new ResponseEntity<Cellulare>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
	@RequestMapping("/addcellulare/{userid}/{cellulareid}")
	public ResponseEntity<User> addCellulare(@PathVariable("userid") int idUser, @PathVariable("cellulareid") int idCell) {
		try {
			
			User user = userService.findById(idUser);
			user.getListaCellulari().add(cellulareService.findById(idCell));
			userService.saveUser(user);
			return new ResponseEntity<User>(HttpStatus.OK);
		} catch (Exception e) {
			logger.error("Errore " + e);
			return new ResponseEntity<User>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
}
