package com.example.demo.controller;

import org.slf4j.LoggerFactory;

import java.util.List;

import org.slf4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.models.Persona;
import com.example.demo.services.PersonaService;

@RestController
@RequestMapping("/persona")
public class PersonaController {

	@Autowired
	private PersonaService personaService;

	private final Logger logger = LoggerFactory.getLogger(this.getClass());

	public ResponseEntity<Persona> savePersona(Persona persona) {
		try {
			Persona saved = personaService.saveOrUpdatePersona(persona);
			logger.info(saved + " saved");
			return new ResponseEntity<Persona>(HttpStatus.CREATED);
		} catch (Exception e) {
			logger.error("Errore " + e);
			return new ResponseEntity<Persona>(HttpStatus.INTERNAL_SERVER_ERROR);
		}

	}
	
	public ResponseEntity<Persona> findById(int id){
		try {			
			Persona find = personaService.findById(id);
			logger.info(find + " found");
			return new ResponseEntity<Persona>(HttpStatus.FOUND);
		}catch(Exception e) {			
			logger.error("Errore " + e);
			return new ResponseEntity<Persona>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
	public ResponseEntity<Persona> findAll(){
		try {			
			List<Persona> find = personaService.findAll();
			logger.info(find + " found");
			return new ResponseEntity<Persona>(HttpStatus.FOUND);
		}catch(Exception e) {			
			logger.error("Errore " + e);
			return new ResponseEntity<Persona>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
	public ResponseEntity<Persona> deletePersona(int id){
		try {			
			personaService.deletePersona(id);
			logger.info(id + " deleted");
			return new ResponseEntity<Persona>(HttpStatus.OK);
		}catch(Exception e) {			
			logger.error("Errore " + e);
			return new ResponseEntity<Persona>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
	public ResponseEntity<Persona> findByProfessione(String professione){
		try {			
			List<Persona> persona = personaService.findByProfessione(professione);
			logger.info(persona + " found");
			return new ResponseEntity<Persona>(HttpStatus.FOUND);
		}catch(Exception e) {			
			logger.error("Errore " + e);
			return new ResponseEntity<Persona>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
}
